plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'pl.allegro.tech.build.axion-release' version '1.12.0'
    id "com.palantir.docker" version "0.22.1"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.4'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.8.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.2'
    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompile('org.springframework.security:spring-security-test')
    testImplementation('io.projectreactor:reactor-test')
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation('com.tngtech.java:junit-dataprovider:1.10.0')
    testCompile('org.skyscreamer:jsonassert:1.5.0')
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    testCompile 'org.mockito:mockito-core:2.7.22'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile("io.springfox:springfox-swagger2:2.7.0")
    compile("io.springfox:springfox-swagger-ui:2.7.0")
    compile("io.springfox:springfox-bean-validators:2.7.0")
}

group = 'avsimvadim'
bootJar {
    baseName = 'bookscatalogprototype'
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}

docker {
    name "${project.group}/${bootJar.baseName}"
    dockerfile file('src/main/java/com/softserve/booksCatalogPrototype/docker/Dockerfile')
    copySpec.from(tasks.bootJar.outputs).into("jars")
    buildArgs(['JAR_FILE': "jars/${bootJar.archiveName}"])
}
